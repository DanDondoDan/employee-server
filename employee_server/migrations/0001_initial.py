# Generated by Django 2.1.4 on 2018-12-22 16:53

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('birth', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('employment_date', models.DateField(default=None)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'General Manager',
                'verbose_name_plural': 'General Managers',
            },
        ),
        migrations.CreateModel(
            name='LowLevelManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('employment_date', models.DateField(default=None)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Low Level Manager',
                'verbose_name_plural': 'Low Level Managers',
            },
        ),
        migrations.CreateModel(
            name='SeniorManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('employment_date', models.DateField(default=None)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Senior Manager',
                'verbose_name_plural': 'Senior Manager',
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('employment_date', models.DateField(default=None)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Specialist',
                'verbose_name_plural': 'Specialists',
            },
        ),
        migrations.CreateModel(
            name='Stockholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('employment_date', models.DateField(default=None)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Stockholder',
                'verbose_name_plural': 'Stockholders',
            },
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='employee_server.Subdivision')),
            ],
            options={
                'verbose_name_plural': 'Subdivision',
            },
        ),
        migrations.CreateModel(
            name='TopManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('changed', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('patronymic_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('employment_date', models.DateField(default=None)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('department', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_server.Subdivision')),
                ('senior_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_server.SeniorManager')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='topmanager', related_query_name='topmanager', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Top Manager',
                'verbose_name_plural': 'Top Managers',
            },
        ),
        migrations.AddField(
            model_name='stockholder',
            name='department',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_server.Subdivision'),
        ),
        migrations.AddField(
            model_name='stockholder',
            name='general_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_server.GeneralManager'),
        ),
        migrations.AddField(
            model_name='stockholder',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stockholder', related_query_name='stockholder', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='specialist',
            name='department',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_server.Subdivision'),
        ),
        migrations.AddField(
            model_name='specialist',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='specialist', related_query_name='specialist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='seniormanager',
            name='department',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_server.Subdivision'),
        ),
        migrations.AddField(
            model_name='seniormanager',
            name='low_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_server.LowLevelManager'),
        ),
        migrations.AddField(
            model_name='seniormanager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='seniormanager', related_query_name='seniormanager', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lowlevelmanager',
            name='department',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_server.Subdivision'),
        ),
        migrations.AddField(
            model_name='lowlevelmanager',
            name='specialist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_server.Specialist'),
        ),
        migrations.AddField(
            model_name='lowlevelmanager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lowlevelmanager', related_query_name='lowlevelmanager', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='generalmanager',
            name='department',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employee_server.Subdivision'),
        ),
        migrations.AddField(
            model_name='generalmanager',
            name='top_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employee_server.TopManager'),
        ),
        migrations.AddField(
            model_name='generalmanager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='generalmanager', related_query_name='generalmanager', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='subdivision',
            unique_together={('parent',)},
        ),
    ]
